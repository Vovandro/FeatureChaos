openapi: 3.0.3
info:
  title: FeatureChaos Admin API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /api/features:
    get:
      summary: Get features
      parameters:
        - in: query
          name: service_id
          required: false
          schema:
            type: string
        - in: query
          name: find
          required: false
          schema:
            type: string
        - in: query
          name: is_deprecated
          required: false
          schema:
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  features:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        value:
                          type: integer
                        used:
                          type: boolean
                        is_deprecated:
                          type: boolean
                        services:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                        keys:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              value:
                                type: integer
                              params:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: integer
                        updated_at:
                          type: string
                          format: date-time
                          description: The date and time the feature was last updated
                          example: 2021-01-01T00:00:00Z
    post:
      summary: Create feature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required: [name]
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /api/features/{id}:
    put:
      summary: Update feature
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required: [name]
      responses:
        "200": { description: OK }
    delete:
      summary: Delete feature
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204": { description: No Content }
  /api/features/{id}/value:
    post:
      summary: Set feature value
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
              required: [value]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: integer
  /api/features/{id}/keys:
    post:
      summary: Create key
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                description:
                  type: string
              required: [key]
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /api/keys/{id}:
    put:
      summary: Update key
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                description:
                  type: string
              required: [key]
      responses:
        "200": { description: OK }
    delete:
      summary: Delete key
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204": { description: No Content }
  /api/keys/{id}/value:
    post:
      summary: Set key value
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
              required: [value]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: integer
  /api/keys/{id}/params:
    post:
      summary: Create param
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required: [name]
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
  /api/params/{id}:
    put:
      summary: Update param
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required: [name]
      responses:
        "200": { description: OK }
    delete:
      summary: Delete param
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204": { description: No Content }
  /api/params/{id}/value:
    post:
      summary: Set param value
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: integer
              required: [value]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: integer
